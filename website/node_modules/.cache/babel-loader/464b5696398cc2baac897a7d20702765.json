{"ast":null,"code":"var _jsxFileName = \"/home/chirag/Documents/WebD/SIH/website/src/components/UploadItemComponent.js\";\nimport React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport { Button, Label, Col, Row, Input } from 'reactstrap';\n\nconst required = val => val && val.length;\n\nconst requiredNum = val => !!val;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst maxVal = len => val => !val || val <= len;\n\nconst minVal = len => val => val && val >= len;\n\nconst isNumber = val => !isNaN(Number(val));\n\nconst multiple = num => val => !val || val % num === 0;\n/*let fileAdder=(e)=>{\n    this.setState({imageFiles: this.state.imageFiles.concat(e.target.files)})\n};*/\n\n\nclass UploadItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: false,\n      images: [],\n      imageFiles: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(image) {\n    console.log(image);\n    this.setState({\n      images: this.state.images.concat(image)\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Upload an image\"))), React.createElement(Row, {\n      className: \"row row-content justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      withIcon: true,\n      label: \"Recommended height : 256px, .jpg,.png,.jpeg allowed\",\n      buttonText: \"Choose images\",\n      withLabel: true,\n      onChange: this.onDrop,\n      labelClass: \"text-secondary\",\n      imgExtension: ['.jpg', '.gif', '.png', '.jpeg'],\n      maxFileSize: 5242880,\n      withPreview: true,\n      className: \"uploader\",\n      name: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UploadItem;","map":{"version":3,"sources":["/home/chirag/Documents/WebD/SIH/website/src/components/UploadItemComponent.js"],"names":["React","Component","ImageUploader","Button","Label","Col","Row","Input","required","val","length","requiredNum","minLength","len","maxVal","minVal","isNumber","isNaN","Number","multiple","num","UploadItem","constructor","props","state","bid","images","imageFiles","onDrop","bind","image","console","log","setState","concat","componentDidMount","window","scrollTo","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport { Button, Label, Col, Row, Input } from 'reactstrap';\n\nconst required = val => val && val.length;\nconst requiredNum = val => !!val;\nconst minLength = len => val => val && val.length >= len;\nconst maxVal = len => val => !val || val <= len;\nconst minVal = len => val => val && val >= len;\nconst isNumber = val => !isNaN(Number(val));\nconst multiple = num => val => !val || val % num === 0;\n\n/*let fileAdder=(e)=>{\n    this.setState({imageFiles: this.state.imageFiles.concat(e.target.files)})\n};*/\n\nclass UploadItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: false,\n      images: [],\n      imageFiles: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(image) {\n    console.log(image);\n    this.setState({\n      images: this.state.images.concat(image)\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div className='container  '>\n        <div className='row justify-content-center heading'>\n          <div className='col-12'>\n            <h3 align='center'> Upload an image</h3>\n          </div>\n        </div>\n        <Row className='row row-content justify-content-center'>\n          <ImageUploader\n            withIcon={true}\n            label='Recommended height : 256px, .jpg,.png,.jpeg allowed'\n            buttonText='Choose images'\n            withLabel={true}\n            onChange={this.onDrop}\n            labelClass='text-secondary'\n            imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\n            maxFileSize={5242880}\n            withPreview\n            className='uploader'\n            name='images'\n          />\n        </Row>\n        {/* <Row className='form-group'>\n          <Label htmlFor='description' md={2}>\n            Add\n          </Label>\n          <Col md={10}>\n            <Input\n              model='.description'\n              id='description'\n              name='description'\n              placeholder='Some description of the product'\n              className='form-control'\n            />\n          </Col>\n        </Row> */}\n        <Row className='align-self-center'>\n          <Col className='text-center'>\n            <Button type='submit' className='bg-primary'>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <br />\n        <br /> <br />\n        <br />\n        <br />\n        <br /> <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default UploadItem;\n"]},"metadata":{},"sourceType":"module"}