{"ast":null,"code":"var _jsxFileName = \"/home/chirag/Documents/WebD/SIH/website/src/components/UploadItemComponent.js\";\nimport React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './LoadingComponent';\n\nconst required = val => val && val.length;\n\nconst requiredNum = val => !!val;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst maxVal = len => val => !val || val <= len;\n\nconst minVal = len => val => val && val >= len;\n\nconst isNumber = val => !isNaN(Number(val));\n\nconst multiple = num => val => !val || val % num === 0;\n/*let fileAdder=(e)=>{\n    this.setState({imageFiles: this.state.imageFiles.concat(e.target.files)})\n};*/\n\n\nclass UploadItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: false,\n      images: [],\n      imageFiles: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(image) {\n    console.log(image);\n    this.setState({\n      images: this.state.images.concat(image)\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    let uniqueName = val => !this.props.products.some(product => product.name === val);\n\n    if (this.props.productsLoading) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    } else if (this.props.productsErrMess) {\n      return React.createElement(\"div\", {\n        className: \"container loading  \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.productsErrMess))));\n    } else return React.createElement(\"div\", {\n      className: \"container  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"  Upload a product\"))), React.createElement(\"div\", {\n      className: \"row row-content justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => {\n        if (values.bid && Number(values.max_bid) > Number(values.price) && Number(values.incr) <= Number(values.max_bid - values.price) / 2 || !values.bid) {\n          var input = document.querySelector('input[type=\"file\"]');\n          this.props.postProduct(values.name, values.cat, values.description, values.price, values.bid, values.max_bid, values.incr, input.files);\n        } else if (Number(values.max_bid) < Number(values.price)) {\n          alert('Maximum price should be greater than the minimum price');\n        } else {\n          alert('Incremental price can be at most half the range of bidding');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"name\",\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Name \"), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Name of product\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        uniqueName\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".name\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        uniqueName: ' There exists a product with this name already'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Label, {\n      htmlFor: \"cat\",\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Control.select, {\n      model: \".cat\",\n      name: \"cat\",\n      id: \"cat\",\n      className: \"form-control\",\n      defaultValue: \"Stationary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Stationary\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Electronic Gadgets\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Bicycles\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Clothes\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sports\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Books\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Others\")))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".bid\",\n      id: \"bid\",\n      name: \"bid\",\n      className: \"form-control\",\n      disabled: false,\n      checked: this.state.bid,\n      defaultChecked: this.state.bid,\n      onChange: e => {\n        this.setState({\n          bid: !this.state.bid\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      htmlFor: \"bid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" Allow Bidding\"))), this.state.bid ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"price\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Minimum Price (in \\u20B9) \"), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".price\",\n      id: \"price\",\n      name: \"price\",\n      defaultValue: 10,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".price\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        minVal: ' Must be greater than 10 Rs.',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"max_bid\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Maximum Price (in \\u20B9) \"), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".max_bid\",\n      id: \"max_bid\",\n      name: \"max_bid\",\n      defaultValue: 100000,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        maxVal: maxVal(100000),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".max_bid\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        maxVal: ' Must be less than 100000 Rs.',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"incr\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Minimum Increment (in \\u20B9) \"), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".incr\",\n      id: \"incr\",\n      name: \"incr\",\n      defaultValue: 10,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(10),\n        maxVal: maxVal(10000),\n        multiple: multiple(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".incr\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        minVal: ' Must be greater than 10 Rs.',\n        maxVal: ' Must be less than 10000 Rs.',\n        multiple: ' Must be a multiple of 10',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })))) : React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"price\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Price (in \\u20B9) \"), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".price\",\n      id: \"price\",\n      name: \"price\",\n      defaultValue: 10,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".price\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        minVal: ' Must be greater than 10 Rs.',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      withIcon: true,\n      label: \"Maximum 4 images, Recommended height : 500px, only .gif,.jpg,.png,.jpeg allowed\",\n      buttonText: \"Choose images\",\n      withLabel: true,\n      onChange: this.onDrop,\n      labelClass: \"text-secondary\",\n      imgExtension: ['.jpg', '.gif', '.png', '.jpeg'],\n      maxFileSize: 5242880,\n      withPreview: true,\n      className: \"uploader\",\n      name: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"description\",\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Control.textarea, {\n      model: \".description\",\n      id: \"description\",\n      name: \"description\",\n      rows: \"12\",\n      placeholder: \"Some description of the product\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UploadItem;","map":{"version":3,"sources":["/home/chirag/Documents/WebD/SIH/website/src/components/UploadItemComponent.js"],"names":["React","Component","ImageUploader","Button","Label","Col","Row","Control","LocalForm","Errors","Loading","required","val","length","requiredNum","minLength","len","maxVal","minVal","isNumber","isNaN","Number","multiple","num","UploadItem","constructor","props","state","bid","images","imageFiles","onDrop","bind","image","console","log","setState","concat","componentDidMount","window","scrollTo","render","uniqueName","products","some","product","name","productsLoading","productsErrMess","values","max_bid","price","incr","input","document","querySelector","postProduct","cat","description","files","alert","e"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport ImageUploader from 'react-images-upload';\nimport {Button, Label, Col, Row} from 'reactstrap';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\nimport Loading from './LoadingComponent';\n\nconst required = (val) => val && val.length;\nconst requiredNum = (val) => !!(val);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxVal = (len) => (val) => !(val) || (val<= len);\nconst minVal = (len) => (val) => (val) && (val>= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst multiple = (num) => (val) => !(val) || (val%num===0);\n\n/*let fileAdder=(e)=>{\n    this.setState({imageFiles: this.state.imageFiles.concat(e.target.files)})\n};*/\n\nclass UploadItem extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            bid: false,\n            images: [],\n            imageFiles:[]\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(image) {\n        console.log(image)\n        this.setState({\n            images: this.state.images.concat(image),\n        });\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n    }\n\n\nrender(){\n    let uniqueName=(val) =>(!this.props.products.some((product)=>(product.name===val)));\n\n    if (this.props.productsLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.productsErrMess) {\n        return(\n            <div className=\"container loading  \">\n                <div className=\"row heading\">\n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.productsErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n return (\n    <div className=\"container  \">\n    <div className=\"row justify-content-center heading\">\n    <div className=\"col-12\">\n  <h3 align=\"center\">  Upload a product</h3>\n  </div>\n    </div>\n    <div className=\"row row-content justify-content-center\">\n    <LocalForm onSubmit={(values) => {\n\n        if((values.bid&&(Number(values.max_bid)>Number(values.price))&&(Number(values.incr)<=Number(values.max_bid-values.price)/2))||(!values.bid))\n        {\n            var input = document.querySelector('input[type=\"file\"]');\n            this.props.postProduct(values.name, values.cat, values.description, values.price, values.bid, values.max_bid, values.incr,input.files);\n        }\n        else if(Number(values.max_bid)<Number(values.price))\n        {\n        alert('Maximum price should be greater than the minimum price');\n        }\n        else {\n          alert('Incremental price can be at most half the range of bidding');\n        }\n\n    }}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\n                                <Col md={4}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name of product\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3),uniqueName\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: ' Must be greater than 2 characters',\n                                            uniqueName: ' There exists a product with this name already'\n                                        }}\n                                     />\n                                </Col>\n                                <Label htmlFor=\"cat\" md={2}>Category</Label>\n                                 <Col md={4}>\n                            <Control.select model=\".cat\" name=\"cat\" id=\"cat\" className=\"form-control\" defaultValue=\"Stationary\">\n                              <option>Stationary</option> <option>Electronic Gadgets</option>\n                              <option>Bicycles</option> <option>Clothes</option>\n                              <option>Sports</option> <option>Books</option>\n                              <option>Others</option>\n                               </Control.select>\n                            </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Col md={4}>\n                            <Control.checkbox model=\".bid\" id=\"bid\" name=\"bid\"\n                            className=\"form-control\" disabled={false}\n                            checked={this.state.bid}\n                            defaultChecked={this.state.bid}\n                            onChange={(e)=>{this.setState({bid: !this.state.bid})}}/>\n                            </Col>\n                            <Col md={8}>\n                            <Label check htmlFor=\"bid\"> Allow Bidding</Label>\n                            </Col>\n                            </Row>\n                            {\n                              (this.state.bid) ? (\n                                <React.Fragment>\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={4}>Minimum Price (in &#8377;) </Label>\n                                <Col md={8}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                        defaultValue={10}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(10),isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".price\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: ' Required',\n                                            minVal: ' Must be greater than 10 Rs.',\n                                            isNumber: ' Must be a number'\n                                         }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"max_bid\" md={4}>Maximum Price (in &#8377;) </Label>\n                            <Col md={8}>\n                                <Control.text model=\".max_bid\" id=\"max_bid\" name=\"max_bid\"\n                                    defaultValue={100000}\n                                    className=\"form-control\"\n                                    validators={{\n                                        requiredNum, maxVal: maxVal(100000),isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".max_bid\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requiredNum: ' Required',\n                                        maxVal: ' Must be less than 100000 Rs.',\n                                        isNumber: ' Must be a number'\n                                     }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"incr\" md={4}>Minimum Increment (in &#8377;) </Label>\n                            <Col md={8}>\n                                <Control.text model=\".incr\" id=\"incr\" name=\"incr\"\n                                    defaultValue={10}\n                                    className=\"form-control\"\n                                    validators={{\n                                        requiredNum, minVal: minVal(10),maxVal: maxVal(10000),multiple: multiple(10),\n                                        isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".incr\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requiredNum: ' Required',\n                                        minVal: ' Must be greater than 10 Rs.',\n                                        maxVal: ' Must be less than 10000 Rs.',\n                                        multiple: ' Must be a multiple of 10',\n                                        isNumber: ' Must be a number'\n                                     }}\n                                 />\n                            </Col>\n                        </Row>\n                        </React.Fragment>\n                              ) :\n                              (\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={4}>Price (in &#8377;) </Label>\n                                <Col md={8}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                        defaultValue={10}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(10),isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".price\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: ' Required',\n                                            minVal: ' Must be greater than 10 Rs.',\n                                            isNumber: ' Must be a number'\n                                         }}\n                                     />\n                                </Col>\n                            </Row>\n                              )\n\n                            }\n              <Row>\n                          <ImageUploader\n                withIcon={true}\n                label=\"Maximum 4 images, Recommended height : 500px, only .gif,.jpg,.png,.jpeg allowed\"\n                buttonText='Choose images'\n                withLabel={true}\n                onChange={this.onDrop}\n                labelClass=\"text-secondary\"\n                imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\n                maxFileSize={5242880}\n                withPreview\n                className=\"uploader\"\n                name=\"images\"\n            />\n            </Row>\n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\n                                        rows=\"12\"\n                                        placeholder=\"Some description of the product\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                          <Row className=\"align-self-center\">\n                          <Col className=\"text-center\">\n                        <Button type=\"submit\" className=\"bg-primary\">\n                            Submit\n                        </Button>\n                        </Col>\n                        </Row>\n                    </LocalForm>\n                    </div>\n                <br/>\n    </div>\n );\n\n}\n\n}\n\nexport default UploadItem;"]},"metadata":{},"sourceType":"module"}