{"ast":null,"code":"var _jsxFileName = \"/home/chirag/Documents/WebD/SIH/website/src/components/UploadItemComponent.js\";\nimport React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst requiredNum = val => !!val;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst maxVal = len => val => !val || val <= len;\n\nconst minVal = len => val => val && val >= len;\n\nconst isNumber = val => !isNaN(Number(val));\n\nconst multiple = num => val => !val || val % num === 0;\n/*let fileAdder=(e)=>{\n    this.setState({imageFiles: this.state.imageFiles.concat(e.target.files)})\n};*/\n\n\nclass UploadItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: false,\n      images: [],\n      imageFiles: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(image) {\n    console.log(image);\n    this.setState({\n      images: this.state.images.concat(image)\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Upload a product\"))), React.createElement(\"div\", {\n      className: \"row row-content justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => {\n        if (values.bid && Number(values.max_bid) > Number(values.price) && Number(values.incr) <= Number(values.max_bid - values.price) / 2 || !values.bid) {\n          var input = document.querySelector('input[type=\"file\"]');\n          this.props.postProduct(values.name, values.cat, values.description, values.price, values.bid, values.max_bid, values.incr, input.files);\n        } else if (Number(values.max_bid) < Number(values.price)) {\n          alert('Maximum price should be greater than the minimum price');\n        } else {\n          alert('Incremental price can be at most half the range of bidding');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"name\",\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Name\", ' '), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Name of product\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".name\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Label, {\n      htmlFor: \"cat\",\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Category\"), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Control.select, {\n      model: \".cat\",\n      name: \"cat\",\n      id: \"cat\",\n      className: \"form-control\",\n      defaultValue: \"Stationary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Stationary\"), ' ', React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Electronic Gadgets\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Bicycles\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Clothes\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sports\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Books\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Others\")))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".bid\",\n      id: \"bid\",\n      name: \"bid\",\n      className: \"form-control\",\n      disabled: false,\n      checked: this.state.bid,\n      defaultChecked: this.state.bid,\n      onChange: e => {\n        this.setState({\n          bid: !this.state.bid\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      htmlFor: \"bid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, ' ', \"Allow Bidding\"))), this.state.bid ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"price\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Minimum Price (in \\u20B9)\", ' '), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".price\",\n      id: \"price\",\n      name: \"price\",\n      defaultValue: 10,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".price\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        minVal: ' Must be greater than 10 Rs.',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"max_bid\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Maximum Price (in \\u20B9)\", ' '), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".max_bid\",\n      id: \"max_bid\",\n      name: \"max_bid\",\n      defaultValue: 100000,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        maxVal: maxVal(100000),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".max_bid\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        maxVal: ' Must be less than 100000 Rs.',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"incr\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Minimum Increment (in \\u20B9)\", ' '), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".incr\",\n      id: \"incr\",\n      name: \"incr\",\n      defaultValue: 10,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(10),\n        maxVal: maxVal(10000),\n        multiple: multiple(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".incr\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        minVal: ' Must be greater than 10 Rs.',\n        maxVal: ' Must be less than 10000 Rs.',\n        multiple: ' Must be a multiple of 10',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })))) : React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"price\",\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Price (in \\u20B9)\", ' '), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".price\",\n      id: \"price\",\n      name: \"price\",\n      defaultValue: 10,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".price\",\n      show: \"touched\",\n      messages: {\n        requiredNum: ' Required',\n        minVal: ' Must be greater than 10 Rs.',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      withIcon: true,\n      label: \"Maximum 4 images, Recommended height : 500px, only .gif,.jpg,.png,.jpeg allowed\",\n      buttonText: \"Choose images\",\n      withLabel: true,\n      onChange: this.onDrop,\n      labelClass: \"text-secondary\",\n      imgExtension: ['.jpg', '.gif', '.png', '.jpeg'],\n      maxFileSize: 5242880,\n      withPreview: true,\n      className: \"uploader\",\n      name: \"images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"description\",\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Col, {\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Control.textarea, {\n      model: \".description\",\n      id: \"description\",\n      name: \"description\",\n      rows: \"12\",\n      placeholder: \"Some description of the product\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UploadItem;","map":{"version":3,"sources":["/home/chirag/Documents/WebD/SIH/website/src/components/UploadItemComponent.js"],"names":["React","Component","ImageUploader","Button","Label","Col","Row","Control","LocalForm","Errors","required","val","length","requiredNum","minLength","len","maxVal","minVal","isNumber","isNaN","Number","multiple","num","UploadItem","constructor","props","state","bid","images","imageFiles","onDrop","bind","image","console","log","setState","concat","componentDidMount","window","scrollTo","render","values","max_bid","price","incr","input","document","querySelector","postProduct","name","cat","description","files","alert","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst requiredNum = val => !!val;\nconst minLength = len => val => val && val.length >= len;\nconst maxVal = len => val => !val || val <= len;\nconst minVal = len => val => val && val >= len;\nconst isNumber = val => !isNaN(Number(val));\nconst multiple = num => val => !val || val % num === 0;\n\n/*let fileAdder=(e)=>{\n    this.setState({imageFiles: this.state.imageFiles.concat(e.target.files)})\n};*/\n\nclass UploadItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: false,\n      images: [],\n      imageFiles: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(image) {\n    console.log(image);\n    this.setState({\n      images: this.state.images.concat(image)\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div className='container  '>\n        <div className='row justify-content-center heading'>\n          <div className='col-12'>\n            <h3 align='center'> Upload a product</h3>\n          </div>\n        </div>\n        <div className='row row-content justify-content-center'>\n          <LocalForm\n            onSubmit={values => {\n              if (\n                (values.bid &&\n                  Number(values.max_bid) > Number(values.price) &&\n                  Number(values.incr) <=\n                    Number(values.max_bid - values.price) / 2) ||\n                !values.bid\n              ) {\n                var input = document.querySelector('input[type=\"file\"]');\n                this.props.postProduct(\n                  values.name,\n                  values.cat,\n                  values.description,\n                  values.price,\n                  values.bid,\n                  values.max_bid,\n                  values.incr,\n                  input.files\n                );\n              } else if (Number(values.max_bid) < Number(values.price)) {\n                alert('Maximum price should be greater than the minimum price');\n              } else {\n                alert(\n                  'Incremental price can be at most half the range of bidding'\n                );\n              }\n            }}\n          >\n            <Row className='form-group'>\n              <Label htmlFor='name' md={2}>\n                Name{' '}\n              </Label>\n              <Col md={4}>\n                <Control.text\n                  model='.name'\n                  id='name'\n                  name='name'\n                  placeholder='Name of product'\n                  className='form-control'\n                  validators={{\n                    required,\n                    minLength: minLength(3)\n                  }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.name'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    minLength: ' Must be greater than 2 characters'\n                  }}\n                />\n              </Col>\n              <Label htmlFor='cat' md={2}>\n                Category\n              </Label>\n              <Col md={4}>\n                <Control.select\n                  model='.cat'\n                  name='cat'\n                  id='cat'\n                  className='form-control'\n                  defaultValue='Stationary'\n                >\n                  <option>Stationary</option>{' '}\n                  <option>Electronic Gadgets</option>\n                  <option>Bicycles</option> <option>Clothes</option>\n                  <option>Sports</option> <option>Books</option>\n                  <option>Others</option>\n                </Control.select>\n              </Col>\n            </Row>\n            <Row className='form-group'>\n              <Col md={4}>\n                <Control.checkbox\n                  model='.bid'\n                  id='bid'\n                  name='bid'\n                  className='form-control'\n                  disabled={false}\n                  checked={this.state.bid}\n                  defaultChecked={this.state.bid}\n                  onChange={e => {\n                    this.setState({ bid: !this.state.bid });\n                  }}\n                />\n              </Col>\n              <Col md={8}>\n                <Label check htmlFor='bid'>\n                  {' '}\n                  Allow Bidding\n                </Label>\n              </Col>\n            </Row>\n            {this.state.bid ? (\n              <React.Fragment>\n                <Row className='form-group'>\n                  <Label htmlFor='price' md={4}>\n                    Minimum Price (in &#8377;){' '}\n                  </Label>\n                  <Col md={8}>\n                    <Control.text\n                      model='.price'\n                      id='price'\n                      name='price'\n                      defaultValue={10}\n                      className='form-control'\n                      validators={{\n                        requiredNum,\n                        minVal: minVal(10),\n                        isNumber\n                      }}\n                    />\n                    <Errors\n                      className='text-danger'\n                      model='.price'\n                      show='touched'\n                      messages={{\n                        requiredNum: ' Required',\n                        minVal: ' Must be greater than 10 Rs.',\n                        isNumber: ' Must be a number'\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row className='form-group'>\n                  <Label htmlFor='max_bid' md={4}>\n                    Maximum Price (in &#8377;){' '}\n                  </Label>\n                  <Col md={8}>\n                    <Control.text\n                      model='.max_bid'\n                      id='max_bid'\n                      name='max_bid'\n                      defaultValue={100000}\n                      className='form-control'\n                      validators={{\n                        requiredNum,\n                        maxVal: maxVal(100000),\n                        isNumber\n                      }}\n                    />\n                    <Errors\n                      className='text-danger'\n                      model='.max_bid'\n                      show='touched'\n                      messages={{\n                        requiredNum: ' Required',\n                        maxVal: ' Must be less than 100000 Rs.',\n                        isNumber: ' Must be a number'\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row className='form-group'>\n                  <Label htmlFor='incr' md={4}>\n                    Minimum Increment (in &#8377;){' '}\n                  </Label>\n                  <Col md={8}>\n                    <Control.text\n                      model='.incr'\n                      id='incr'\n                      name='incr'\n                      defaultValue={10}\n                      className='form-control'\n                      validators={{\n                        requiredNum,\n                        minVal: minVal(10),\n                        maxVal: maxVal(10000),\n                        multiple: multiple(10),\n                        isNumber\n                      }}\n                    />\n                    <Errors\n                      className='text-danger'\n                      model='.incr'\n                      show='touched'\n                      messages={{\n                        requiredNum: ' Required',\n                        minVal: ' Must be greater than 10 Rs.',\n                        maxVal: ' Must be less than 10000 Rs.',\n                        multiple: ' Must be a multiple of 10',\n                        isNumber: ' Must be a number'\n                      }}\n                    />\n                  </Col>\n                </Row>\n              </React.Fragment>\n            ) : (\n              <Row className='form-group'>\n                <Label htmlFor='price' md={4}>\n                  Price (in &#8377;){' '}\n                </Label>\n                <Col md={8}>\n                  <Control.text\n                    model='.price'\n                    id='price'\n                    name='price'\n                    defaultValue={10}\n                    className='form-control'\n                    validators={{\n                      requiredNum,\n                      minVal: minVal(10),\n                      isNumber\n                    }}\n                  />\n                  <Errors\n                    className='text-danger'\n                    model='.price'\n                    show='touched'\n                    messages={{\n                      requiredNum: ' Required',\n                      minVal: ' Must be greater than 10 Rs.',\n                      isNumber: ' Must be a number'\n                    }}\n                  />\n                </Col>\n              </Row>\n            )}\n            <Row>\n              <ImageUploader\n                withIcon={true}\n                label='Maximum 4 images, Recommended height : 500px, only .gif,.jpg,.png,.jpeg allowed'\n                buttonText='Choose images'\n                withLabel={true}\n                onChange={this.onDrop}\n                labelClass='text-secondary'\n                imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\n                maxFileSize={5242880}\n                withPreview\n                className='uploader'\n                name='images'\n              />\n            </Row>\n            <Row className='form-group'>\n              <Label htmlFor='description' md={2}>\n                Description\n              </Label>\n              <Col md={10}>\n                <Control.textarea\n                  model='.description'\n                  id='description'\n                  name='description'\n                  rows='12'\n                  placeholder='Some description of the product'\n                  className='form-control'\n                />\n              </Col>\n            </Row>\n            <Row className='align-self-center'>\n              <Col className='text-center'>\n                <Button type='submit' className='bg-primary'>\n                  Submit\n                </Button>\n              </Col>\n            </Row>\n          </LocalForm>\n        </div>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default UploadItem;\n"]},"metadata":{},"sourceType":"module"}