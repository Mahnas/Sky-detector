{"ast":null,"code":"var _jsxFileName = \"/home/chirag/Documents/WebD/SIH/website/src/components/HeaderComponent.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Form, FormGroup, Label, Input, Nav, NavbarToggler, Collapse, NavItem, NavbarBrand, Modal, ModalBody, ModalHeader, Button } from 'reactstrap';\nimport { Dropdown, Row, Col, DropdownItem, DropdownMenu, DropdownToggle, InputGroupAddon } from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst ifminLength = len => val => !val || val.length >= len;\n\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nconst isNumber = val => !isNaN(Number(val));\n\nfunction Registerer(props) {\n  if (props.isSignedIn === false) return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"\\xA0\", React.createElement(Button, {\n    color: \"primary\",\n    onClick: props.toggleRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-user-plus   \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" Register\"));else return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n}\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      isRegisterOpen: false,\n      dropdownOpen: false,\n      shopsOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.shopstoggle = this.shopstoggle.bind(this);\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.toggleRegister = this.toggleRegister.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  shopstoggle() {\n    this.setState({\n      shopsOpen: !this.state.shopsOpen\n    });\n  }\n\n  toggleNav() {\n    if (window.innerWidth < 1200) {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      });\n    }\n  }\n\n  toggleRegister(event) {\n    this.setState({\n      isRegisterOpen: !this.state.isRegisterOpen\n    });\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    this.props.loginUser({\n      username: this.username.value,\n      password: this.password.value\n    });\n    event.preventDefault();\n  }\n\n  handleLogout() {\n    this.props.logoutUser();\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      dark: true,\n      color: \"primary\",\n      expand: \"lg\",\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavbarToggler, {\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(NavbarBrand, {\n      className: \"mr-auto white-text brand d-block d-lg-none\",\n      href: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Campus Assistant\"), React.createElement(Collapse, {\n      isOpen: this.state.isNavOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      className: \"ml-2\",\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-home   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \" Home\")), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-gift   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), \" Products \\xA0 \", React.createElement(\"i\", {\n      className: \"fa fa-caret-down fa-sm\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Books\"), React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/bicycles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Bicycles\"), React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/stationary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Stationary\"), React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/electronics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Electronic Gadgets\"), React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/clothes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Clothes\"), React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/sports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Sports\"), React.createElement(DropdownItem, {\n      onClick: this.toggleNav,\n      tag: Link,\n      to: \"/others\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Others\"))), React.createElement(NavItem, {\n      className: \"ml-2\",\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-search   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), \" Search\")), React.createElement(NavItem, {\n      className: \"ml-2\",\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/chatbot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-question   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), \" UNA\")), this.props.auth.isAuthenticated ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      onClick: this.toggleNav,\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-user-circle-o   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), \" My Profile\")), React.createElement(NavItem, {\n      className: \"ml-2\",\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/favorites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-heart   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), \" My favorites\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), this.props.auth.isAuthenticated && this.props.auth.userinfo && !this.props.auth.userinfo.admin ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      className: \"ml-2\",\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/wallet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-inr   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), \" Wallet\")), React.createElement(NavItem, {\n      className: \"ml-2\",\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/upload_product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-upload   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), \" Upload item\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), this.props.auth.isAuthenticated && this.props.auth.userinfo && this.props.auth.userinfo.admin ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      onClick: this.toggleNav,\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-clock-o   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), \" Products pending\")), \"  \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, !this.props.auth.isAuthenticated ? React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-sign-in   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), \" Login\", this.props.auth.isLoading ? React.createElement(\"span\", {\n      className: \"fa fa-spinner fa-pulse fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }) : null) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-text white-text mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.props.auth.user.username), React.createElement(Button, {\n      color: \"info\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-sign-out   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), \" Logout\", this.props.auth.isLoading ? React.createElement(\"span\", {\n      className: \"fa fa-spinner fa-pulse fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }) : null)), React.createElement(Registerer, {\n      isSignedIn: this.props.auth.isAuthenticated,\n      toggleRegister: () => {\n        this.toggleRegister();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })))))), React.createElement(Modal, {\n      isOpen: !this.props.auth.isAuthenticated && this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"username\",\n      name: \"username\",\n      innerRef: input => this.username = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      innerRef: input => this.password = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Login\")))), React.createElement(Modal, {\n      isOpen: this.state.isRegisterOpen,\n      toggle: this.toggleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Register\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      model: \"user\",\n      onSubmit: values => {\n        this.toggleRegister();\n        this.props.registerUser({\n          username: values.username,\n          password: values.password,\n          email: values.email,\n          room: values.room,\n          block: values.block,\n          hostel: values.hostel,\n          phone: values.phone,\n          showroom: values.showroom,\n          showfacebook: values.showfacebook,\n          showphone: values.showphone,\n          facebookProfile: values.facebookProfile,\n          firstname: values.firstname,\n          lastname: values.lastname\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Control.text, {\n      model: \".username\",\n      id: \"username\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".username\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Control.password, {\n      model: \".password\",\n      id: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"password\",\n      validators: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".password\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 5 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Control.text, {\n      model: \".firstname\",\n      id: \"firstname\",\n      name: \"firstname\",\n      className: \"form-control\",\n      placeholder: \"firstname\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Control.text, {\n      model: \".lastname\",\n      id: \"lastname\",\n      name: \"lastname\",\n      className: \"form-control\",\n      placeholder: \"lastname\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".lastname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"hostel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Hostel\"), React.createElement(Control.select, {\n      model: \".hostel\",\n      id: \"hostel\",\n      className: \"form-control\",\n      defaultValue: \"Jasper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Jasper\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Amber\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Topaz\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Sapphire\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Diamond\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Emerald\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Ruby\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Rosaline\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Opal\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Block\"), React.createElement(Control.select, {\n      model: \".block\",\n      id: \"block\",\n      className: \"form-control\",\n      defaultValue: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"A\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"B\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"C\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"D\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Room No.\"), React.createElement(Control.text, {\n      model: \".room\",\n      id: \"room\",\n      name: \"room\",\n      className: \"form-control\",\n      placeholder: \"room\",\n      validators: {\n        required,\n        maxLength: maxLength(4),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".room\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        maxLength: ' Must be 4 characters or less',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(Control.text, {\n      model: \".email\",\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"email\",\n      validators: {\n        required,\n        validEmail\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".email\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        validEmail: ' Enter a valid email'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Contact No.\"), React.createElement(Control.text, {\n      model: \".phone\",\n      id: \"phone\",\n      name: \"phone\",\n      className: \"form-control\",\n      placeholder: \"phone\",\n      validators: {\n        required,\n        minLength: minLength(10),\n        maxLength: maxLength(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".phone\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Should be a valid 10 digit no.',\n        maxLength: ' Donot write country code',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"facebookProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Facebook Profile Link (Optional)\")), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"https://www.facebook.com/\")), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".facebookProfile\",\n      id: \"facebookProfile\",\n      name: \"facebookProfile\",\n      className: \"form-control\",\n      placeholder: \"facebookProfile\",\n      validators: {\n        minLength: ifminLength(15),\n        maxLength: maxLength(30)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".facebookProfile\",\n      show: \"touched\",\n      messages: {\n        minLength: ' Should have at least 15 characters, otherwise donot enter this field',\n        maxLength: ' Should not exceed 30 characters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \" Check the info. you want to keep public :\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".showroom\",\n      id: \"showroom\",\n      name: \"showroom\",\n      className: \"form-control\",\n      defaultValue: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \" Room Info\"))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".showphone\",\n      id: \"showphone\",\n      name: \"showphone\",\n      className: \"form-control\",\n      defaultValue: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      htmlFor: \"showphone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \" Contact No.\"))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".showfacebook\",\n      id: \"showfacebook\",\n      name: \"showfacebook\",\n      className: \"form-control\",\n      defaultValue: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      htmlFor: \"showfacebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \" Facebook Profile\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Sign Up\"))))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/chirag/Documents/WebD/SIH/website/src/components/HeaderComponent.js"],"names":["React","Component","Navbar","Form","FormGroup","Label","Input","Nav","NavbarToggler","Collapse","NavItem","NavbarBrand","Modal","ModalBody","ModalHeader","Button","Dropdown","Row","Col","DropdownItem","DropdownMenu","DropdownToggle","InputGroupAddon","NavLink","Link","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","ifminLength","validEmail","test","isNumber","isNaN","Number","Registerer","props","isSignedIn","toggleRegister","Header","constructor","state","isNavOpen","isModalOpen","isRegisterOpen","dropdownOpen","shopsOpen","toggleModal","bind","shopstoggle","toggleNav","handleLogin","handleLogout","toggle","setState","window","innerWidth","event","loginUser","username","value","password","preventDefault","logoutUser","render","auth","isAuthenticated","userinfo","admin","isLoading","user","input","values","registerUser","email","room","block","hostel","phone","showroom","showfacebook","showphone","facebookProfile","firstname","lastname"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Navbar, Form, FormGroup, Label, Input, Nav, NavbarToggler,Collapse,NavItem, NavbarBrand, Modal, ModalBody, ModalHeader, Button} from 'reactstrap';\nimport {Dropdown,Row, Col,DropdownItem,DropdownMenu,DropdownToggle, InputGroupAddon} from 'reactstrap';\nimport { NavLink,Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst ifminLength = (len) => (val) => !(val) || (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst isNumber = (val) => !isNaN(Number(val));\n\n  function Registerer(props){\n    if(props.isSignedIn===false)\n    return (\n      <React.Fragment>\n          &nbsp;\n      <Button color=\"primary\" onClick={props.toggleRegister}>\n     <span className=\"fa fa-user-plus   \"></span> Register\n     </Button>\n      </React.Fragment>\n    );\n    else return(\n      <React.Fragment>\n      </React.Fragment>\n    );\n  }\n\n\nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n         isNavOpen: false,\n         isModalOpen: false,\n         isRegisterOpen: false,\n         dropdownOpen: false,\n         shopsOpen: false\n           }\n        this.toggleModal=this.toggleModal.bind(this);\n        this.shopstoggle = this.shopstoggle.bind(this);\n        this.toggleNav=this.toggleNav.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.toggleRegister=this.toggleRegister.bind(this);\n        this.toggle=this.toggle.bind(this);\n    }\n\n    toggle(){\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\n    }\n    shopstoggle() {\n        this.setState({ shopsOpen: !this.state.shopsOpen });\n    }\n\n    toggleNav(){\n        if(window.innerWidth<1200){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n    }\n\n    toggleRegister(event){\n      this.setState({\n        isRegisterOpen: !this.state.isRegisterOpen\n      });\n\n    }\n\n    handleLogin(event) {\n      this.toggleModal();\n      this.props.loginUser({username: this.username.value, password: this.password.value});\n      event.preventDefault();\n  }\n\n  handleLogout() {\n      this.props.logoutUser();\n  }\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n    render(){\n        return (\n            <React.Fragment>\n                <Navbar dark color=\"primary\" expand=\"lg\" fixed=\"top\">\n                    <div className=\"container\">\n                     <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\n                     <NavbarBrand className=\"mr-auto white-text brand d-block d-lg-none\" href=\"/home\">\n                        Campus Assistant\n                     </NavbarBrand>\n                     <Collapse isOpen={this.state.isNavOpen} navbar>\n                     <Nav navbar>\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link white-text\" to=\"/home\">\n                               <span className=\"fa fa-home   \"/> Home\n                           </NavLink>\n                        </NavItem>\n                                {/* <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link white-text\" to=\"/products\">\n                                        <span className=\"fa fa-cutlery   \" /> Canteens\n                           </NavLink>\n                                </NavItem>\n                        <Dropdown isOpen={this.state.shopsOpen} toggle={this.shopstoggle}>\n                                    <DropdownToggle color=\"white\">\n                                        <div className=\"white-text\">\n                                            <span className=\"fa fa-shopping-bag   \" /> Shops\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\n\n                                        </div>\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/products\">Inside campus</DropdownItem>\n                                        <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/products\" >Outside</DropdownItem>\n                                    </DropdownMenu>\n                        </Dropdown> */}\n                        <Dropdown  isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                            <DropdownToggle color=\"white\">\n                            <div className=\"white-text\">\n                                <span className=\"fa fa-gift   \"/> Products\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\n\n                                                </div>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/books\">Books</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/bicycles\" >Bicycles</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/stationary\" >Stationary</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/electronics\" >Electronic Gadgets</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/clothes\" >Clothes</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/sports\" >Sports</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/others\" >Others</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link white-text\" to=\"/search\">\n                                <span className=\"fa fa-search   \"/> Search\n                            </NavLink>\n                        </NavItem>\n                                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link white-text\" to=\"/chatbot\">\n                                        <span className=\"fa fa-question   \" /> UNA\n                           </NavLink>\n                                </NavItem>\n\n                            {\n                            (this.props.auth.isAuthenticated)?(\n                            <React.Fragment>\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link white-text\" to=\"/profile\">\n                                     <span className=\"fa fa-user-circle-o   \"/> My Profile\n                                </NavLink>\n                                </NavItem>\n                                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                <NavLink className=\"nav-link white-text\" to=\"/favorites\">\n                                   <span className=\"fa fa-heart   \"/> My favorites\n                                </NavLink>\n                                </NavItem>\n                            </React.Fragment>\n                            ):\n                            (<div/>)\n                        }\n                        {\n                                    (this.props.auth.isAuthenticated && this.props.auth.userinfo&& !this.props.auth.userinfo.admin)?(\n                                <React.Fragment>\n                                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                   <NavLink className=\"nav-link white-text\" to=\"/wallet\">\n                                      <span className=\"fa fa-inr   \" /> Wallet\n                                     </NavLink>\n                                </NavItem>\n                                 <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                 <NavLink className=\"nav-link white-text\" to=\"/upload_product\">\n                                    <span className=\"fa fa-upload   \"/> Upload item\n                                 </NavLink>\n                                 </NavItem>\n                                 {/* <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                 <NavLink className=\"nav-link white-text\" to=\"/uploads\">\n                                    <span className=\"fa fa-list   \"/> My uploads\n                                 </NavLink>\n                                 </NavItem> */}\n                                 </React.Fragment>\n\n                            ):\n                            (<div/>)\n                        }\n                         {\n                                    (this.props.auth.isAuthenticated && this.props.auth.userinfo&&this.props.auth.userinfo.admin)?(\n                              <React.Fragment>\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link white-text\" to=\"/pending\">\n                                     <span className=\"fa fa-clock-o   \"/> Products pending\n                                </NavLink>\n                                </NavItem>\n                               {\n                                   /*\n                                 <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link white-text\" to=\"/stats\">\n                                   <span className=\"fa fa-info-circle   \"/> Stats\n                                </NavLink>\n                                </NavItem>\n\n                                   */\n                               }  </React.Fragment>\n                            ):\n                            (<div/>)\n                        }\n                     </Nav>\n                     <Nav className=\"ml-auto\" navbar>\n                     <NavItem>\n                                    { !this.props.auth.isAuthenticated ?\n                        <Button color=\"primary\" onClick={this.toggleModal}>\n                                            <span className=\"fa fa-sign-in   \"></span> Login\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        :\n                                        <div>\n                                        <div className=\"navbar-text white-text mr-1\">{this.props.auth.user.username}</div>\n                                        <Button color=\"info\" onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out   \"></span> Logout\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        </div>\n                                    }\n\n\n                    <Registerer isSignedIn={this.props.auth.isAuthenticated} toggleRegister={()=>{this.toggleRegister()}}/>\n                     </NavItem>\n                      </Nav>\n                     </Collapse>\n                    </div>\n                 </Navbar>\n                 <Modal isOpen={!this.props.auth.isAuthenticated&&this.state.isModalOpen} toggle={this.toggleModal}>\n                     <ModalHeader toggle={this.toggleModal}>\n                         Sign In\n                     </ModalHeader>\n                     <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                     </Modal>\n                 <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\n                     <ModalHeader toggle={this.toggleRegister}>\n                         Register\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"user\" onSubmit={(values) => {\n                           this.toggleRegister();\n                            this.props.registerUser({\n                              username: values.username,\n                               password: values.password,\n                               email: values.email,\n                               room: values.room,\n                               block: values.block,\n                               hostel: values.hostel,\n                               phone: values.phone,\n                               showroom: values.showroom,\n                               showfacebook: values.showfacebook,\n                               showphone: values.showphone,\n                               facebookProfile: values.facebookProfile,\n                               firstname: values.firstname,\n                               lastname: values.lastname });\n                           }}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Control.text model=\".username\" id=\"username\" name=\"username\"\n                            className=\"form-control\" placeholder=\"Username\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".username\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\"\n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"firstname\">First Name</Label>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                            className=\"form-control\" placeholder=\"firstname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                 <Label htmlFor=\"lastname\">Last Name</Label>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                            className=\"form-control\" placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"hostel\">Hostel</Label>\n                            <Control.select model=\".hostel\" id=\"hostel\" className=\"form-control\" defaultValue=\"Jasper\">\n                              <option>Jasper</option> <option>Amber</option>\n                              <option>Topaz</option> <option>Sapphire</option>\n                              <option>Diamond</option> <option>Emerald</option>\n                              <option>Ruby</option> <option>Rosaline</option>\n                              <option>Opal</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"block\">Block</Label>\n                            <Control.select model=\".block\" id=\"block\" className=\"form-control\" defaultValue=\"A\">\n                              <option>A</option> <option>B</option>\n                              <option>C</option> <option>D</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                                 <Label htmlFor=\"room\">Room No.</Label>\n                                <Control.text model=\".room\" id=\"room\" name=\"room\"\n                            className=\"form-control\" placeholder=\"room\" validators={{required,maxLength:maxLength(4),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".room\" show=\"touched\" messages={{required: 'Required',\n                             maxLength:' Must be 4 characters or less',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                 <Label htmlFor=\"email\">E-mail</Label>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\n                            validEmail: ' Enter a valid email'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                 <Label htmlFor=\"phone\">Contact No.</Label>\n                                <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\n                            className=\"form-control\" placeholder=\"phone\" validators={{required,minLength:minLength(10),maxLength: maxLength(10),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".phone\" show=\"touched\" messages={{required: 'Required',\n                             minLength:' Should be a valid 10 digit no.',maxLength:' Donot write country code',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Row>\n                                <Col md={12}>\n                                 <Label htmlFor=\"facebookProfile\">Facebook Profile Link (Optional)</Label>\n                                 </Col>\n                                 <Col md={6}>\n                                 <InputGroupAddon addonType=\"prepend\">https://www.facebook.com/</InputGroupAddon>\n                                 </Col>\n                                <Col md={6}>\n                                <Control.text model=\".facebookProfile\" id=\"facebookProfile\" name=\"facebookProfile\"\n                            className=\"form-control\" placeholder=\"facebookProfile\" validators={{minLength: ifminLength(15),maxLength: maxLength(30)}} />\n\n                            <Errors className=\"text-danger\" model=\".facebookProfile\" show=\"touched\" messages={{\n                             minLength:' Should have at least 15 characters, otherwise donot enter this field',maxLength:' Should not exceed 30 characters'}}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Row>\n                            <Label> Check the info. you want to keep public :</Label>\n                            </Row>\n                            <Row>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showroom\" id=\"showroom\" name=\"showroom\"\n                            className=\"form-control\" defaultValue={false}/>\n                            <Label check> Room Info</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showphone\" id=\"showphone\" name=\"showphone\"\n                            className=\"form-control\" defaultValue={false}/>\n                            <Label check htmlFor=\"showphone\"> Contact No.</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showfacebook\" id=\"showfacebook\" name=\"showfacebook\"\n                            className=\"form-control\" defaultValue={false}/>\n                            <Label check htmlFor=\"showfacebook\"> Facebook Profile</Label>\n                            </FormGroup>\n                            </Col>\n                            </Row>\n                            <br/>\n                            <FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Sign Up</Button>\n                            </FormGroup>\n                        </LocalForm>\n                     </ModalBody>\n                 </Modal>\n                </React.Fragment>\n        );\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}