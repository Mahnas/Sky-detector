{"ast":null,"code":"var _jsxFileName = \"/home/chirag/Documents/WebD/SIH/website/src/components/HeaderComponent.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Form, FormGroup, Label, Input, Nav, NavbarToggler, Collapse, NavItem, NavbarBrand, Modal, ModalBody, ModalHeader, Button } from 'reactstrap';\nimport { Dropdown, Row, Col, DropdownItem, DropdownMenu, DropdownToggle, InputGroupAddon } from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    if (window.innerWidth < 1200) {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      dark: true,\n      color: \"primary\",\n      expand: \"lg\",\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(NavbarToggler, {\n      onClick: this.toggleNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(NavbarBrand, {\n      className: \"mr-auto white-text brand d-block d-lg-none\",\n      href: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sky Detector\"), React.createElement(Collapse, {\n      isOpen: this.state.isNavOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \": (\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \") }\", this.props.auth.isAuthenticated && this.props.auth.userinfo && this.props.auth.userinfo.admin ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      onClick: this.toggleNav,\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link white-text\",\n      to: \"/pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-clock-o   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \" Products pending\")), ' ') : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, !this.props.auth.isAuthenticated ? React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-sign-in   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), \" Login\", this.props.auth.isLoading ? React.createElement(\"span\", {\n      className: \"fa fa-spinner fa-pulse fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : null) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-text white-text mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.props.auth.user.username), React.createElement(Button, {\n      color: \"info\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-sign-out   \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \" Logout\", this.props.auth.isLoading ? React.createElement(\"span\", {\n      className: \"fa fa-spinner fa-pulse fa-fw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }) : null)), React.createElement(Registerer, {\n      isSignedIn: this.props.auth.isAuthenticated,\n      toggleRegister: () => {\n        this.toggleRegister();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))))), React.createElement(Modal, {\n      isOpen: !this.props.auth.isAuthenticated && this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"username\",\n      name: \"username\",\n      innerRef: input => this.username = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      innerRef: input => this.password = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Login\")))), React.createElement(Modal, {\n      isOpen: this.state.isRegisterOpen,\n      toggle: this.toggleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Register\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      model: \"user\",\n      onSubmit: values => {\n        this.toggleRegister();\n        this.props.registerUser({\n          username: values.username,\n          password: values.password,\n          email: values.email,\n          room: values.room,\n          block: values.block,\n          hostel: values.hostel,\n          phone: values.phone,\n          showroom: values.showroom,\n          showfacebook: values.showfacebook,\n          showphone: values.showphone,\n          facebookProfile: values.facebookProfile,\n          firstname: values.firstname,\n          lastname: values.lastname\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Control.text, {\n      model: \".username\",\n      id: \"username\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".username\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Control.password, {\n      model: \".password\",\n      id: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"password\",\n      validators: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".password\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 5 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Control.text, {\n      model: \".firstname\",\n      id: \"firstname\",\n      name: \"firstname\",\n      className: \"form-control\",\n      placeholder: \"firstname\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Control.text, {\n      model: \".lastname\",\n      id: \"lastname\",\n      name: \"lastname\",\n      className: \"form-control\",\n      placeholder: \"lastname\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(20)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".lastname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Must be greater than 2 characters',\n        maxLength: ' Must be 20 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"hostel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Hostel\"), React.createElement(Control.select, {\n      model: \".hostel\",\n      id: \"hostel\",\n      className: \"form-control\",\n      defaultValue: \"Jasper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Jasper\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Amber\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Topaz\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Sapphire\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Diamond\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Emerald\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Ruby\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Rosaline\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Opal\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Block\"), React.createElement(Control.select, {\n      model: \".block\",\n      id: \"block\",\n      className: \"form-control\",\n      defaultValue: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"A\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"B\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"C\"), \" \", React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"D\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Room No.\"), React.createElement(Control.text, {\n      model: \".room\",\n      id: \"room\",\n      name: \"room\",\n      className: \"form-control\",\n      placeholder: \"room\",\n      validators: {\n        required,\n        maxLength: maxLength(4),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".room\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        maxLength: ' Must be 4 characters or less',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(Control.text, {\n      model: \".email\",\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"email\",\n      validators: {\n        required,\n        validEmail\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".email\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        validEmail: ' Enter a valid email'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Contact No.\"), React.createElement(Control.text, {\n      model: \".phone\",\n      id: \"phone\",\n      name: \"phone\",\n      className: \"form-control\",\n      placeholder: \"phone\",\n      validators: {\n        required,\n        minLength: minLength(10),\n        maxLength: maxLength(10),\n        isNumber\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".phone\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: ' Should be a valid 10 digit no.',\n        maxLength: ' Donot write country code',\n        isNumber: ' Must be a number'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"facebookProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"Facebook Profile Link (Optional)\")), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"https://www.facebook.com/\")), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".facebookProfile\",\n      id: \"facebookProfile\",\n      name: \"facebookProfile\",\n      className: \"form-control\",\n      placeholder: \"facebookProfile\",\n      validators: {\n        minLength: ifminLength(15),\n        maxLength: maxLength(30)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".facebookProfile\",\n      show: \"touched\",\n      messages: {\n        minLength: ' Should have at least 15 characters, otherwise donot enter this field',\n        maxLength: ' Should not exceed 30 characters'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \" Check the info. you want to keep public :\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".showroom\",\n      id: \"showroom\",\n      name: \"showroom\",\n      className: \"form-control\",\n      defaultValue: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \" Room Info\"))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".showphone\",\n      id: \"showphone\",\n      name: \"showphone\",\n      className: \"form-control\",\n      defaultValue: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      htmlFor: \"showphone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, ' ', \"Contact No.\"))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Control.checkbox, {\n      model: \".showfacebook\",\n      id: \"showfacebook\",\n      name: \"showfacebook\",\n      className: \"form-control\",\n      defaultValue: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(Label, {\n      check: true,\n      htmlFor: \"showfacebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, ' ', \"Facebook Profile\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"Sign Up\"))))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/chirag/Documents/WebD/SIH/website/src/components/HeaderComponent.js"],"names":["React","Component","Navbar","Form","FormGroup","Label","Input","Nav","NavbarToggler","Collapse","NavItem","NavbarBrand","Modal","ModalBody","ModalHeader","Button","Dropdown","Row","Col","DropdownItem","DropdownMenu","DropdownToggle","InputGroupAddon","NavLink","Link","Header","constructor","props","state","isNavOpen","toggleNav","bind","window","innerWidth","setState","render","auth","isAuthenticated","userinfo","admin","toggleModal","isLoading","user","username","handleLogout","toggleRegister","isModalOpen","handleLogin","input","password","isRegisterOpen","values","registerUser","email","room","block","hostel","phone","showroom","showfacebook","showphone","facebookProfile","firstname","lastname","required","minLength","maxLength","isNumber","validEmail","ifminLength"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Navbar,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  NavbarBrand,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Button\n} from 'reactstrap';\nimport {\n  Dropdown,\n  Row,\n  Col,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroupAddon\n} from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    if (window.innerWidth < 1200) {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar dark color='primary' expand='lg' fixed='top'>\n          <div className='container'>\n            <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\n            <NavbarBrand\n              className='mr-auto white-text brand d-block d-lg-none'\n              href='/home'\n            >\n              Sky Detector\n            </NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                {/* <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link white-text\" to=\"/home\">\n                               <span className=\"fa fa-home   \"/> Home\n                           </NavLink>\n                        </NavItem>\n                                {/* <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link white-text\" to=\"/products\">\n                                        <span className=\"fa fa-cutlery   \" /> Canteens\n                           </NavLink>\n                                </NavItem>\n                        <Dropdown isOpen={this.state.shopsOpen} toggle={this.shopstoggle}>\n                                    <DropdownToggle color=\"white\">\n                                        <div className=\"white-text\">\n                                            <span className=\"fa fa-shopping-bag   \" /> Shops\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\n\n                                        </div>\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/products\">Inside campus</DropdownItem>\n                                        <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/products\" >Outside</DropdownItem>\n                                    </DropdownMenu>\n                        </Dropdown> */}\n                {/* <Dropdown  isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                            <DropdownToggle color=\"white\">\n                            <div className=\"white-text\">\n                                <span className=\"fa fa-gift   \"/> Products\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\n\n                                                </div>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/books\">Books</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/bicycles\" >Bicycles</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/stationary\" >Stationary</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/electronics\" >Electronic Gadgets</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/clothes\" >Clothes</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/sports\" >Sports</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/others\" >Others</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link white-text\" to=\"/search\">\n                                <span className=\"fa fa-search   \"/> Search\n                            </NavLink>\n                        </NavItem>\n                                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link white-text\" to=\"/chatbot\">\n                                        <span className=\"fa fa-question   \" /> UNA\n                           </NavLink>\n                                </NavItem> */}\n                : (<div />) }\n                {this.props.auth.isAuthenticated &&\n                this.props.auth.userinfo &&\n                this.props.auth.userinfo.admin ? (\n                  <React.Fragment>\n                    <NavItem onClick={this.toggleNav} className='ml-2'>\n                      <NavLink className='nav-link white-text' to='/pending'>\n                        <span className='fa fa-clock-o   ' /> Products pending\n                      </NavLink>\n                    </NavItem>\n                    {/*\n                                 <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link white-text\" to=\"/stats\">\n                                   <span className=\"fa fa-info-circle   \"/> Stats\n                                </NavLink>\n                                </NavItem>\n\n                                   */}{' '}\n                  </React.Fragment>\n                ) : (\n                  <div />\n                )}\n              </Nav>\n              <Nav className='ml-auto' navbar>\n                <NavItem>\n                  {!this.props.auth.isAuthenticated ? (\n                    <Button color='primary' onClick={this.toggleModal}>\n                      <span className='fa fa-sign-in   '></span> Login\n                      {this.props.auth.isLoading ? (\n                        <span className='fa fa-spinner fa-pulse fa-fw'></span>\n                      ) : null}\n                    </Button>\n                  ) : (\n                    <div>\n                      <div className='navbar-text white-text mr-1'>\n                        {this.props.auth.user.username}\n                      </div>\n                      <Button color='info' onClick={this.handleLogout}>\n                        <span className='fa fa-sign-out   '></span> Logout\n                        {this.props.auth.isLoading ? (\n                          <span className='fa fa-spinner fa-pulse fa-fw'></span>\n                        ) : null}\n                      </Button>\n                    </div>\n                  )}\n\n                  <Registerer\n                    isSignedIn={this.props.auth.isAuthenticated}\n                    toggleRegister={() => {\n                      this.toggleRegister();\n                    }}\n                  />\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n        <Modal\n          isOpen={!this.props.auth.isAuthenticated && this.state.isModalOpen}\n          toggle={this.toggleModal}\n        >\n          <ModalHeader toggle={this.toggleModal}>Sign In</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor='username'>Username</Label>\n                <Input\n                  type='text'\n                  id='username'\n                  name='username'\n                  innerRef={input => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='password'>Password</Label>\n                <Input\n                  type='password'\n                  id='password'\n                  name='password'\n                  innerRef={input => (this.password = input)}\n                />\n              </FormGroup>\n              <Button type='submit' value='submit' color='primary'>\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\n          <ModalHeader toggle={this.toggleRegister}>Register</ModalHeader>\n          <ModalBody>\n            <LocalForm\n              model='user'\n              onSubmit={values => {\n                this.toggleRegister();\n                this.props.registerUser({\n                  username: values.username,\n                  password: values.password,\n                  email: values.email,\n                  room: values.room,\n                  block: values.block,\n                  hostel: values.hostel,\n                  phone: values.phone,\n                  showroom: values.showroom,\n                  showfacebook: values.showfacebook,\n                  showphone: values.showphone,\n                  facebookProfile: values.facebookProfile,\n                  firstname: values.firstname,\n                  lastname: values.lastname\n                });\n              }}\n            >\n              <FormGroup>\n                <Label htmlFor='username'>Username</Label>\n                <Control.text\n                  model='.username'\n                  id='username'\n                  name='username'\n                  className='form-control'\n                  placeholder='Username'\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(20)\n                  }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.username'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    minLength: ' Must be greater than 2 characters',\n                    maxLength: ' Must be 20 characters or less'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='password'>Password</Label>\n                <Control.password\n                  model='.password'\n                  id='password'\n                  name='password'\n                  className='form-control'\n                  placeholder='password'\n                  validators={{\n                    required,\n                    minLength: minLength(6),\n                    maxLength: maxLength(20)\n                  }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.password'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    minLength: ' Must be greater than 5 characters',\n                    maxLength: ' Must be 20 characters or less'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='firstname'>First Name</Label>\n                <Control.text\n                  model='.firstname'\n                  id='firstname'\n                  name='firstname'\n                  className='form-control'\n                  placeholder='firstname'\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(20)\n                  }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.firstname'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    minLength: ' Must be greater than 2 characters',\n                    maxLength: ' Must be 20 characters or less'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='lastname'>Last Name</Label>\n                <Control.text\n                  model='.lastname'\n                  id='lastname'\n                  name='lastname'\n                  className='form-control'\n                  placeholder='lastname'\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(20)\n                  }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.lastname'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    minLength: ' Must be greater than 2 characters',\n                    maxLength: ' Must be 20 characters or less'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='hostel'>Hostel</Label>\n                <Control.select\n                  model='.hostel'\n                  id='hostel'\n                  className='form-control'\n                  defaultValue='Jasper'\n                >\n                  <option>Jasper</option> <option>Amber</option>\n                  <option>Topaz</option> <option>Sapphire</option>\n                  <option>Diamond</option> <option>Emerald</option>\n                  <option>Ruby</option> <option>Rosaline</option>\n                  <option>Opal</option>\n                </Control.select>\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='block'>Block</Label>\n                <Control.select\n                  model='.block'\n                  id='block'\n                  className='form-control'\n                  defaultValue='A'\n                >\n                  <option>A</option> <option>B</option>\n                  <option>C</option> <option>D</option>\n                </Control.select>\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='room'>Room No.</Label>\n                <Control.text\n                  model='.room'\n                  id='room'\n                  name='room'\n                  className='form-control'\n                  placeholder='room'\n                  validators={{ required, maxLength: maxLength(4), isNumber }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.room'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    maxLength: ' Must be 4 characters or less',\n                    isNumber: ' Must be a number'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='email'>E-mail</Label>\n                <Control.text\n                  model='.email'\n                  id='email'\n                  name='email'\n                  className='form-control'\n                  placeholder='email'\n                  validators={{ required, validEmail }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.email'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    validEmail: ' Enter a valid email'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor='phone'>Contact No.</Label>\n                <Control.text\n                  model='.phone'\n                  id='phone'\n                  name='phone'\n                  className='form-control'\n                  placeholder='phone'\n                  validators={{\n                    required,\n                    minLength: minLength(10),\n                    maxLength: maxLength(10),\n                    isNumber\n                  }}\n                />\n                <Errors\n                  className='text-danger'\n                  model='.phone'\n                  show='touched'\n                  messages={{\n                    required: 'Required',\n                    minLength: ' Should be a valid 10 digit no.',\n                    maxLength: ' Donot write country code',\n                    isNumber: ' Must be a number'\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <Col md={12}>\n                    <Label htmlFor='facebookProfile'>\n                      Facebook Profile Link (Optional)\n                    </Label>\n                  </Col>\n                  <Col md={6}>\n                    <InputGroupAddon addonType='prepend'>\n                      https://www.facebook.com/\n                    </InputGroupAddon>\n                  </Col>\n                  <Col md={6}>\n                    <Control.text\n                      model='.facebookProfile'\n                      id='facebookProfile'\n                      name='facebookProfile'\n                      className='form-control'\n                      placeholder='facebookProfile'\n                      validators={{\n                        minLength: ifminLength(15),\n                        maxLength: maxLength(30)\n                      }}\n                    />\n\n                    <Errors\n                      className='text-danger'\n                      model='.facebookProfile'\n                      show='touched'\n                      messages={{\n                        minLength:\n                          ' Should have at least 15 characters, otherwise donot enter this field',\n                        maxLength: ' Should not exceed 30 characters'\n                      }}\n                    />\n                  </Col>\n                </Row>\n              </FormGroup>\n              <Row>\n                <Label> Check the info. you want to keep public :</Label>\n              </Row>\n              <Row>\n                <Col md={4}>\n                  <FormGroup check inline>\n                    <Control.checkbox\n                      model='.showroom'\n                      id='showroom'\n                      name='showroom'\n                      className='form-control'\n                      defaultValue={false}\n                    />\n                    <Label check> Room Info</Label>\n                  </FormGroup>\n                </Col>\n                <Col md={4}>\n                  <FormGroup check inline>\n                    <Control.checkbox\n                      model='.showphone'\n                      id='showphone'\n                      name='showphone'\n                      className='form-control'\n                      defaultValue={false}\n                    />\n                    <Label check htmlFor='showphone'>\n                      {' '}\n                      Contact No.\n                    </Label>\n                  </FormGroup>\n                </Col>\n                <Col md={4}>\n                  <FormGroup check inline>\n                    <Control.checkbox\n                      model='.showfacebook'\n                      id='showfacebook'\n                      name='showfacebook'\n                      className='form-control'\n                      defaultValue={false}\n                    />\n                    <Label check htmlFor='showfacebook'>\n                      {' '}\n                      Facebook Profile\n                    </Label>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <br />\n              <FormGroup>\n                <Button type='submit' value='submit' color='primary'>\n                  Sign Up\n                </Button>\n              </FormGroup>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}